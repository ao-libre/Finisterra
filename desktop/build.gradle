plugins {
    id 'application'
    id 'de.undercouch.download' version '4.0.0'
    id 'com.github.breadmoirai.github-release' version '2.2.9'
    id 'org.beryx.runtime' version '1.2.0'
}

sourceSets {
    main.java.srcDirs = ["src/"]
    main.resources.srcDirs = ["assets/"]
}

static def osName() { System.getProperty('os.name').toLowerCase(Locale.ROOT) }
def releasesDir = "${buildDir}/releases"
mainClassName = "launcher.DesktopLauncher"

dependencies {
    compile project(":client")
    compile "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
}

if (osName().contains('mac')) {
    run {
        jvmArgs += '-XstartOnFirstThread'
    }
}

task dist(type: Jar) {
    from files(sourceSets.main.output.classesDirs)
    from { configurations.compile.collect { zipTree(it) } }

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

dist.dependsOn classes
run.dependsOn classes

runtime {
    modules = ['java.base', 'java.desktop', 'jdk.unsupported', 'jdk.unsupported.desktop','java.logging']
    options = ['--strip-debug', '--no-header-files', '--no-man-pages', '--strip-native-commands', '--compress', '2']
    javaHome = "${projectDir}/jdk-14"
    
    jpackage {
    	jpackageHome = "${projectDir}/jdk-14"
    	imageOutputDir = file(releasesDir)
		imageName = 'AO-Java'
		
		if (osName().contains('windows')) {
			imageOptions = ['--icon', "${projectDir}/assets/ao.ico",
							'--app-version', "${project.version}"]
		} else if (osName().contains('linux')) {
			imageOptions = ['--icon', "${projectDir}/assets/ao.png",
							'--app-version', "${project.version}"]
		} else if (osName().contains('mac')) {
			imageOptions = ['--icon', "${projectDir}/assets/ao.icns",
							'--app-version', "${project.version}"]
		}
		
        if (osName().contains('mac')) {
        	jvmArgs = ['-XstartOnFirstThread']
    	}
		
        skipInstaller = true
    }
}

tasks.jre.doFirst {
	
	download {

		if (osName().contains('windows')) {
			src 'https://download.java.net/java/early_access/jpackage/8/openjdk-14-jpackage+8_windows-x64_bin.zip'
		} else if (osName().contains('linux')) {
			src 'https://download.java.net/java/early_access/jpackage/8/openjdk-14-jpackage+8_linux-x64_bin.tar.gz'
		} else if (osName().contains('mac')) {
			src 'https://download.java.net/java/early_access/jpackage/8/openjdk-14-jpackage+8_osx-x64_bin.tar.gz'
		}
		
		dest projectDir
		overwrite false
	}
	
	if (!file("${projectDir}/jdk-14").exists()) {
		copy {
			
			if (osName().contains('windows')) {
				from zipTree("${projectDir}/openjdk-14-jpackage+8_windows-x64_bin.zip")
			} else if (osName().contains('linux')) {
				from tarTree("${projectDir}/openjdk-14-jpackage+8_linux-x64_bin.tar.gz")
			} else if (osName().contains('mac')) {
				from tarTree("${projectDir}/openjdk-14-jpackage+8_osx-x64_bin.tar.gz")
			}
			
			into projectDir
		}
	}
}

tasks.jpackage.doFirst {
	if (!file(releasesDir).exists()) {
		releasesDir.mkdirs()
	}
}

tasks.jpackage.doLast {
	copy {
		from file("assets")
		into file("$releasesDir/AO-Java/app/assets")
	}
}

Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-11-11T10:44:01-03:00

====== Mount development enviroment ======

===== Clone repo =====

{{{code: lang="java" linenumbers="True"
git clone https://github.com/ao-libre/ao-java.git
}}}


===== Requirements =====

1. Important: you need to use [[http://jdk.java.net/12/|OpenJDK 12]] to make it run o [[https://www.oracle.com/technetwork/java/javase/downloads/jdk12-downloads-5295953.html|SE edition]]
2. [[https://www.jetbrains.com/idea/download/index.html|Intel IJ versión Comunity]]

==== Import in IntelliJ ====
* Open IntelliJ
* Select **Import Project** or **File>New>Project** From existing source
* Find and select **build.gradle** file
* Create run configurations using gradle tasks (desktop:run, server:run and design:run)

Here is an image showing how it should look like:
* ***IMPORTANTE*** el campo de configuración Gradle project, ud debe utilizar el ícono de la Carpeta y seleccionar en todos los casos el Proyecto Raíz como se muestra en la siguiente imagen.

{{../../img/gradle-project.png}}

=== Server ===
{{../../img/server-run.png}}

=== Client ===
{{../../img/client-run.png}}

=== Game Design Center ===
{{../../img/design-run.png}}

=== How to change Java Version? ===
If you have another version of Java already installed, please change:
https://kodejava.org/how-do-i-set-the-default-java-jdk-version-on-mac-os-x/

If you use IntelliJ, use the JDK that comes with the project if is not working change it by yourself like in the picture below:

`IntelliJ IDEA -> Preferences -> Build, Execution, Deployment -> Build Tools -> Gradle `

{{../../img/select-java-version.png}}

===== Modules Specification =====

==== components ====
Contains all components (ECS related)

==== core ====
Game client logic, screens, GUI, client systems (ECS): on runtime should have a replicated World.

==== desktop ====
Contains assets and desktop game launcher.

==== server ====
Server logic and systems (ECS), database connection (TBD), etc.

==== shared ====
All stuff shared between client and server, like network requests and responses, objects, maps, etc.

==== design ====
Frontend game design editor, graphics viewer and animation manager, json manager, world editor, spells manager and more.

Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-11-09T02:06:01-03:00

====== 1 Compilar para probar o testear ======

Para usar el juego sin un ejecutable, directamente desde código, requeriremos de clonar el repositorio y luego por comando encender el servidor y luego el cliente.

===== 1. Clonar el repositorio =====

==== Opción A - Por comando ====
Abre la linea de comando CMD o Terminal y corre este comando (deberás tener instalado el paquete git)
{{{code: lang="pkgconfig" linenumbers="True"
git clone https://github.com/ao-libre/ao-java.git
}}}


==== Option B - Por descarga ====
Descargamos el repositorio desde https://github.com/ao-libre/ao-java/archive/master.zip (de esta forma deberíamos inicializar el repositorio más adelante)

==== Option C - Mediante un cliente (recomendamos para aquellos que estén comenzando en el uso de github) ====
1. Descarga [[https://desktop.github.com/|Github Desktop]]
2. Abre el cliente ve a File > Clone Repository > y coloca este enlace https://github.com/ao-libre/ao-java.git

===== 2. Instalar java =====

==== Windows ====

=== Configuracion recomendada mediante Gradlew.proeprties ===
Editar el archivo, gradlew.propieties y agregar esta linea al final
{{{code: lang="java" linenumbers="True"
org.gradle.java.home=DIRECTORIO_DEL_SDK //use la ruta sin el /bin ej: c:/program files (x86)/java/jdk-12.0.2
}}}


=== Configuración mediante Variables de entorno ===
Sistema>Confiugracion avanzada>Variables de entorno>
	Path>Editar>Agregar ;[dirección-del-jdk] /bin
	Agregar nueva>
		Nombre: JAVA_HOME
		Variable: use la ruta sin el /bin ej: c:/program files (x86)/java/jdk-12.0.2


===== 3. Compilar en consola =====

=== Windows: ===
* Puedes usar CMD
   1. Go to folder **/ao-java** and use following commands to run client on console gradlew.bat desktop:run -x :shared:fluid** or server gradlew.bat server:run

=== Linux o Mac ===
* Use TERMINAL for run
   1. Go to folder **/ao-java** and use following commands to run client on console **./gradlew desktop:run -x :shared:fluid** or **server ./gradlew server:run**

** To avoid recompiling shared module and regeneration of .class files, which will probably bring some execution errors like ClassNotFoundException, you can add this argument to skip `fluid` task in both client and server run configurations: -x :shared:fluid

==== Conflicts running Client and Server in same machine ====
- If occurred error on ***Windows***, test this command gradlew.bat desktop:build or server gradlew.bat server:build before repeat [step i](#windows).
- If occurred error on ***Linux or Mac*** , test this command ./gradlew desktop:build or server ./gradlew server:build before repeat [step i](#linux-o-mac).

Generate distribution jars:
This step is not necessary, use it only if you want to create an executable to share with a friend.  ./gradlew desktop:dist   ./gradlew server:dist 

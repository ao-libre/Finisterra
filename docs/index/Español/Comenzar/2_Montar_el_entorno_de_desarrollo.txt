Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-11-09T02:06:13-03:00

====== 2 Montar el entorno de desarrollo ======

===== Clonar el repositorio =====

{{{code: lang="java" linenumbers="True"
git clone https://github.com/ao-libre/ao-java.git
}}}


===== Requirimientos del entorno =====

1. Usamos la version [[http://jdk.java.net/12/|OpenJDK 12]] o [[https://www.oracle.com/technetwork/java/javase/downloads/jdk12-downloads-5295953.html|SE edition,]] sino disponemos de la versión instalada en el sistema se requerirá la descarga.
2. IDE: [[https://www.jetbrains.com/idea/download/index.html|Intel IJ versión Comunity]]

==== Importar el proyecto en Intel IJ ====
* Abrimos Intel IJ
* Seleccionamos **Import Project** o **File>New>Project** **From existing source**
* Bucamos el archivo **build.gradle** de la carpeta Raíz > El IDE indexará todo el proyecto
* Creamos la configuración para poder correr los proyectos (desktop:run, server:run and design:run), podremos ver las configuraciones a continuación

* ***IMPORTANTE*** el campo de configuración **Gradle project**, deberiamos utilizar el **ícono de la Carpeta** y **seleccionar** en todos los casos el **Proyecto Raíz ao-java** como se muestra en la siguiente imagen.

{{../../../img/gradle-project.png}}

=== Server ===
{{../../../img/server-run.png}}

=== Client ===
{{../../../img/client-run.png}}

=== Game Design Center ===
{{../../../img/design-run.png}}

=== ¿Como cambiamos la versión de java si actualmente en el sistema estamos usando otra? ===
Si esta estás en Mac revisa [[https://kodejava.org/how-do-i-set-the-default-java-jdk-version-on-mac-os-x/|este]] hilo


* Nos dirigimos en el menú de IntelliJ a File > Settings > Build, Execution, Deployment > Build Tools > Gradle
* Luego seleccionamos la versión correcta como muestra la imagen.
{{../../../img/select-java-version.png}}

===== Especificaciones de los módulos =====

==== components ====
Contiene todo lo relacionado con los componentes.

==== client ====
Contine la lógica del cliente, las pantallas, la interfaz del juego, los sistemas del cliente: en tiempo de ejecución replica el mundo en función a la información que le envía el server.

==== desktop ====
Contiene los recursos del juego (assets) y el launcher del juego -> [[Código Fuente:Modulos:Desktop|desktop]]

==== Server ====
Logica y systemas de comunicación (ECS), conecciones con la báse de datos (TBD), etc. ->[[Código Fuente:Modulos:Server|server]]

==== shared ====
Todo lo compartido entre el cliente y el servidor, como solicitudes y respuestas de red, objetos, mapas, etc.

==== design ====
Editor de diseño de juegos frontend, visor de gráficos y administrador de animación, json manager, editor del mundol, administrador de hechizos y más.
2

plugins {
    id 'artemis-fluid'
    id 'artemis'
}

dependencies {
    api project(":components")
	api group: "com.badlogicgames.gdx", name: "gdx-platform", version: "$gdxVersion", classifier: "natives-desktop"
	api group: "net.mostlyoriginal.artemis-odb", name: "contrib-core", version: "$artemisVersion"
	api group: "net.mostlyoriginal.artemis-odb", name: "contrib-jam", version: "$artemisVersion"
	api group: "net.mostlyoriginal.artemis-odb", name: "contrib-eventbus", version: "$artemisVersion"
	api ("net.mostlyoriginal.artemis-odb:contrib-network:$artemisVersion") {
        exclude group: "net.esotericsoftware", module: "kryo"
    }
	api group: "com.esotericsoftware", name: "kryo", version: "$kryoVersion"
    api group: "com.google.guava", name: "guava", version: "$guavaVersion"
	api group: "org.ini4j", name: "ini4j", version: "$ini4jVersion"
}

ext {
    fluidOutputDir = file("$buildDir/generated-sources/fluid/")
}

sourceSets {
    main.java.srcDirs = ["src/", fluidOutputDir]
    main.resources.srcDirs = ["resources/"]
}

fluid {
    generatedSourcesDirectory = fluidOutputDir
    classpath = sourceSets.main.compileClasspath

    // optional parameters. Uncomment to activate.
    // preferences.prefixComponentGetter = "_" // prefix for E::[get]pos()
    // preferences.prefixComponentCreate = "" // prefix for E::[]pos()
    // preferences.prefixComponentHas = "has" // prefix for E::[has]Pos()
    // preferences.prefixComponentRemove = "remove" // prefix for E::[remove]Pos()
    // preferences.generateTagMethods = true // add tag convenience methods.
    // preferences.generateGroupMethods = true // add group convenience methods.
    // preferences.generateBooleanComponentAccessors = true // Generate boolean accessors for flag components?
    // preferences.swallowGettersWithParameters = false // global setting. overridden by @Fluid annotation.
}

weave {
    classesDir = new File(buildDir, "classes/java/main")
    enableArtemisPlugin = true
    enablePooledWeaving = true
    generateLinkMutators = true
    optimizeEntitySystems = true
}

compileJava.dependsOn fluid

// Help intellIJ pick up the generated classes.
idea {
    module {
        generatedSourceDirs += fluidOutputDir
        excludeDirs -= file("$buildDir")
        excludeDirs -= file("$buildDir/src")
        excludeDirs += file("$buildDir/dependency-cache")
        excludeDirs += file("$buildDir/libs")
        excludeDirs += file("$buildDir/tmp")
    }
}
